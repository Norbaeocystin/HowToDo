#install docker not from oficial repo
curl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo apt-key add -
sudo add-apt-repository "deb [arch=amd64] https://download.docker.com/linux/ubuntu $(lsb_release -cs) stable edge"
sudo add-apt-repository "deb [arch=amd64] https://download.docker.com/linux/ubuntu $(lsb_release -cs) stable edge test"
sudo apt-get update
apt-cache policy docker-ce
apt install docker-ce


distribution=$(. /etc/os-release;echo $ID$VERSION_ID)
curl -s -L https://nvidia.github.io/nvidia-docker/gpgkey | sudo apt-key add -
curl -s -L https://nvidia.github.io/nvidia-docker/$distribution/nvidia-docker.list | sudo tee /etc/apt/sources.list.d/nvidia-docker.list
sudo apt-get update && sudo apt-get install -y nvidia-container-toolkit
sudo systemctl restart docker
#--gpus it can be all, list, int
docker run --gpus all nvidia/cuda:9.0-base nvidia-smi
#--gpus it can be all, list, int
sudo docker run --name tf_gpu --gpus all -p 8000:8888 -it tensorflow/tensorflow:latest-gpu /bin/bash
#run in docker
apt update
apt install python3 python3-pip
pip3 install tensorflow-gpu==2.0.0b1
pip3 install jupyterlab
curl -sL https://deb.nodesource.com/setup_12.x Â | bash -
apt-get -y install nodejs
npm -g config set user root
npm install -g ijavascript
ijsinstall
curl -sS https://dl.yarnpkg.com/debian/pubkey.gpg | apt-key add -
echo "deb https://dl.yarnpkg.com/debian/ stable main" | tee /etc/apt/sources.list.d/yarn.list
apt update
apt install yarn
yarn add @tensorflow/tfjs-node-gpu
jupyter lab --allow-root --port 8888 --ip=0.0.0.0
#docker commit <container id> <image-name>:<version>
